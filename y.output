Terminals unused in grammar

   EOF_TOKEN
   PERIOD


State 5 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 15 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID SEMICOLON body
    2        | error PROGRAM ID SEMICOLON body
    3        | error SEMICOLON body

    4 body: dc BEG1N commands END

    5 dc: dc_c dc_v dc_p
    6   | dc_c dc_v dc_p error BEG1N

    7 dc_c: dc_cc dc_c
    8     | %empty

    9 dc_cc: CONST ID EQUAL number SEMICOLON
   10      | error SEMICOLON

   11 dc_v: dc_vv dc_v
   12     | %empty

   13 dc_vv: VAR variables COLON var_type SEMICOLON

   14 var_type: REAL
   15         | INTEGER
   16         | error

   17 variables: ID more_var
   18          | error

   19 more_var: COMMA variables
   20         | %empty

   21 dc_p: dc_pp dc_p
   22     | %empty

   23 dc_pp: PROCEDURE ID parameters SEMICOLON body_p

   24 parameters: LBRACKET param_list RBRACKET
   25           | %empty

   26 param_list: variables COLON var_type more_param

   27 more_param: SEMICOLON param_list
   28           | %empty

   29 body_p: dc_loc BEG1N commands END SEMICOLON

   30 dc_loc: dc_v

   31 arg_list: LBRACKET arguments RBRACKET
   32         | %empty

   33 arguments: ID more_id

   34 more_id: SEMICOLON arguments
   35        | %empty

   36 false_p: ELSE cmd
   37        | %empty

   38 commands: cmd SEMICOLON commands
   39         | %empty

   40 cmd: READ LBRACKET variables RBRACKET
   41    | WRITE LBRACKET variables RBRACKET
   42    | WHILE LBRACKET condition RBRACKET DO cmd
   43    | FOR ID ATTRIB INT TO INT DO cmd
   44    | IF condition THEN cmd false_p
   45    | ID ATTRIB expression
   46    | ID arg_list
   47    | BEG1N commands END

   48 condition: expression comparator expression

   49 comparator: GEQUAL
   50           | LEQUAL
   51           | EQUAL
   52           | GREATER
   53           | LESSER
   54           | NOTEQUAL

   55 expression: term other_terms

   56 unary_op: PLUS
   57         | MINUS
   58         | %empty

   59 other_terms: add_op term other_terms
   60            | %empty

   61 add_op: PLUS
   62       | MINUS

   63 term: unary_op factor more_factors

   64 more_factors: mult_op factor more_factors
   65             | %empty

   66 mult_op: MULT
   67        | DIV

   68 factor: ID
   69       | number
   70       | LBRACKET expression RBRACKET

   71 number: INT
   72       | FLOAT


Terminals, with rules where they appear

$end (0) 0
error (256) 2 3 6 10 16 18
EOF_TOKEN (258)
PROGRAM (259) 1 2
BEG1N (260) 4 6 29 47
END (261) 4 29 47
CONST (262) 9
VAR (263) 13
REAL (264) 14
INTEGER (265) 15
PROCEDURE (266) 23
ELSE (267) 36
READ (268) 40
WRITE (269) 41
WHILE (270) 42
DO (271) 42 43
IF (272) 44
FOR (273) 43
TO (274) 43
THEN (275) 44
INT (276) 43 71
FLOAT (277) 72
ID (278) 1 2 9 17 23 33 43 45 46 68
SEMICOLON (279) 1 2 3 9 10 13 23 27 29 34 38
PERIOD (280)
EQUAL (281) 9 51
COLON (282) 13 26
COMMA (283) 19
LBRACKET (284) 24 31 40 41 42 70
RBRACKET (285) 24 31 40 41 42 70
ATTRIB (286) 43 45
NOTEQUAL (287) 54
GEQUAL (288) 49
LEQUAL (289) 50
GREATER (290) 52
LESSER (291) 53
PLUS (292) 56 61
MINUS (293) 57 62
MULT (294) 66
DIV (295) 67


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1 2 3, on right: 0
body (43)
    on left: 4, on right: 1 2 3
dc (44)
    on left: 5 6, on right: 4
dc_c (45)
    on left: 7 8, on right: 5 6 7
dc_cc (46)
    on left: 9 10, on right: 7
dc_v (47)
    on left: 11 12, on right: 5 6 11 30
dc_vv (48)
    on left: 13, on right: 11
var_type (49)
    on left: 14 15 16, on right: 13 26
variables (50)
    on left: 17 18, on right: 13 19 26 40 41
more_var (51)
    on left: 19 20, on right: 17
dc_p (52)
    on left: 21 22, on right: 5 6 21
dc_pp (53)
    on left: 23, on right: 21
parameters (54)
    on left: 24 25, on right: 23
param_list (55)
    on left: 26, on right: 24 27
more_param (56)
    on left: 27 28, on right: 26
body_p (57)
    on left: 29, on right: 23
dc_loc (58)
    on left: 30, on right: 29
arg_list (59)
    on left: 31 32, on right: 46
arguments (60)
    on left: 33, on right: 31 34
more_id (61)
    on left: 34 35, on right: 33
false_p (62)
    on left: 36 37, on right: 44
commands (63)
    on left: 38 39, on right: 4 29 38 47
cmd (64)
    on left: 40 41 42 43 44 45 46 47, on right: 36 38 42 43 44
condition (65)
    on left: 48, on right: 42 44
comparator (66)
    on left: 49 50 51 52 53 54, on right: 48
expression (67)
    on left: 55, on right: 45 48 70
unary_op (68)
    on left: 56 57 58, on right: 63
other_terms (69)
    on left: 59 60, on right: 55 59
add_op (70)
    on left: 61 62, on right: 59
term (71)
    on left: 63, on right: 55 59
more_factors (72)
    on left: 64 65, on right: 63 64
mult_op (73)
    on left: 66 67, on right: 64
factor (74)
    on left: 68 69 70, on right: 63 64
number (75)
    on left: 71 72, on right: 9 69


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    PROGRAM  shift, and go to state 2

    program  go to state 3


State 1

    2 program: error . PROGRAM ID SEMICOLON body
    3        | error . SEMICOLON body

    PROGRAM    shift, and go to state 4
    SEMICOLON  shift, and go to state 5


State 2

    1 program: PROGRAM . ID SEMICOLON body

    ID  shift, and go to state 6


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    2 program: error PROGRAM . ID SEMICOLON body

    ID  shift, and go to state 8


State 5

    3 program: error SEMICOLON . body

    error  shift, and go to state 9
    CONST  shift, and go to state 10

    error      [reduce using rule 8 (dc_c)]
    BEG1N      reduce using rule 8 (dc_c)
    VAR        reduce using rule 8 (dc_c)
    PROCEDURE  reduce using rule 8 (dc_c)

    body   go to state 11
    dc     go to state 12
    dc_c   go to state 13
    dc_cc  go to state 14


State 6

    1 program: PROGRAM ID . SEMICOLON body

    SEMICOLON  shift, and go to state 15


State 7

    0 $accept: program $end .

    $default  accept


State 8

    2 program: error PROGRAM ID . SEMICOLON body

    SEMICOLON  shift, and go to state 16


State 9

   10 dc_cc: error . SEMICOLON

    SEMICOLON  shift, and go to state 17


State 10

    9 dc_cc: CONST . ID EQUAL number SEMICOLON

    ID  shift, and go to state 18


State 11

    3 program: error SEMICOLON body .

    $default  reduce using rule 3 (program)


State 12

    4 body: dc . BEG1N commands END

    BEG1N  shift, and go to state 19


State 13

    5 dc: dc_c . dc_v dc_p
    6   | dc_c . dc_v dc_p error BEG1N

    VAR  shift, and go to state 20

    $default  reduce using rule 12 (dc_v)

    dc_v   go to state 21
    dc_vv  go to state 22


State 14

    7 dc_c: dc_cc . dc_c

    error  shift, and go to state 9
    CONST  shift, and go to state 10

    error      [reduce using rule 8 (dc_c)]
    BEG1N      reduce using rule 8 (dc_c)
    VAR        reduce using rule 8 (dc_c)
    PROCEDURE  reduce using rule 8 (dc_c)

    dc_c   go to state 23
    dc_cc  go to state 14


State 15

    1 program: PROGRAM ID SEMICOLON . body

    error  shift, and go to state 9
    CONST  shift, and go to state 10

    error      [reduce using rule 8 (dc_c)]
    BEG1N      reduce using rule 8 (dc_c)
    VAR        reduce using rule 8 (dc_c)
    PROCEDURE  reduce using rule 8 (dc_c)

    body   go to state 24
    dc     go to state 12
    dc_c   go to state 13
    dc_cc  go to state 14


State 16

    2 program: error PROGRAM ID SEMICOLON . body

    error  shift, and go to state 9
    CONST  shift, and go to state 10

    error      [reduce using rule 8 (dc_c)]
    BEG1N      reduce using rule 8 (dc_c)
    VAR        reduce using rule 8 (dc_c)
    PROCEDURE  reduce using rule 8 (dc_c)

    body   go to state 25
    dc     go to state 12
    dc_c   go to state 13
    dc_cc  go to state 14


State 17

   10 dc_cc: error SEMICOLON .

    $default  reduce using rule 10 (dc_cc)


State 18

    9 dc_cc: CONST ID . EQUAL number SEMICOLON

    EQUAL  shift, and go to state 26


State 19

    4 body: dc BEG1N . commands END

    BEG1N  shift, and go to state 27
    READ   shift, and go to state 28
    WRITE  shift, and go to state 29
    WHILE  shift, and go to state 30
    IF     shift, and go to state 31
    FOR    shift, and go to state 32
    ID     shift, and go to state 33

    $default  reduce using rule 39 (commands)

    commands  go to state 34
    cmd       go to state 35


State 20

   13 dc_vv: VAR . variables COLON var_type SEMICOLON

    error  shift, and go to state 36
    ID     shift, and go to state 37

    variables  go to state 38


State 21

    5 dc: dc_c dc_v . dc_p
    6   | dc_c dc_v . dc_p error BEG1N

    PROCEDURE  shift, and go to state 39

    $default  reduce using rule 22 (dc_p)

    dc_p   go to state 40
    dc_pp  go to state 41


State 22

   11 dc_v: dc_vv . dc_v

    VAR  shift, and go to state 20

    $default  reduce using rule 12 (dc_v)

    dc_v   go to state 42
    dc_vv  go to state 22


State 23

    7 dc_c: dc_cc dc_c .

    $default  reduce using rule 7 (dc_c)


State 24

    1 program: PROGRAM ID SEMICOLON body .

    $default  reduce using rule 1 (program)


State 25

    2 program: error PROGRAM ID SEMICOLON body .

    $default  reduce using rule 2 (program)


State 26

    9 dc_cc: CONST ID EQUAL . number SEMICOLON

    INT    shift, and go to state 43
    FLOAT  shift, and go to state 44

    number  go to state 45


State 27

   47 cmd: BEG1N . commands END

    BEG1N  shift, and go to state 27
    READ   shift, and go to state 28
    WRITE  shift, and go to state 29
    WHILE  shift, and go to state 30
    IF     shift, and go to state 31
    FOR    shift, and go to state 32
    ID     shift, and go to state 33

    $default  reduce using rule 39 (commands)

    commands  go to state 46
    cmd       go to state 35


State 28

   40 cmd: READ . LBRACKET variables RBRACKET

    LBRACKET  shift, and go to state 47


State 29

   41 cmd: WRITE . LBRACKET variables RBRACKET

    LBRACKET  shift, and go to state 48


State 30

   42 cmd: WHILE . LBRACKET condition RBRACKET DO cmd

    LBRACKET  shift, and go to state 49


State 31

   44 cmd: IF . condition THEN cmd false_p

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 58 (unary_op)

    condition   go to state 52
    expression  go to state 53
    unary_op    go to state 54
    term        go to state 55


State 32

   43 cmd: FOR . ID ATTRIB INT TO INT DO cmd

    ID  shift, and go to state 56


State 33

   45 cmd: ID . ATTRIB expression
   46    | ID . arg_list

    LBRACKET  shift, and go to state 57
    ATTRIB    shift, and go to state 58

    $default  reduce using rule 32 (arg_list)

    arg_list  go to state 59


State 34

    4 body: dc BEG1N commands . END

    END  shift, and go to state 60


State 35

   38 commands: cmd . SEMICOLON commands

    SEMICOLON  shift, and go to state 61


State 36

   18 variables: error .

    $default  reduce using rule 18 (variables)


State 37

   17 variables: ID . more_var

    COMMA  shift, and go to state 62

    $default  reduce using rule 20 (more_var)

    more_var  go to state 63


State 38

   13 dc_vv: VAR variables . COLON var_type SEMICOLON

    COLON  shift, and go to state 64


State 39

   23 dc_pp: PROCEDURE . ID parameters SEMICOLON body_p

    ID  shift, and go to state 65


State 40

    5 dc: dc_c dc_v dc_p .
    6   | dc_c dc_v dc_p . error BEG1N

    error  shift, and go to state 66

    BEG1N  reduce using rule 5 (dc)


State 41

   21 dc_p: dc_pp . dc_p

    PROCEDURE  shift, and go to state 39

    $default  reduce using rule 22 (dc_p)

    dc_p   go to state 67
    dc_pp  go to state 41


State 42

   11 dc_v: dc_vv dc_v .

    $default  reduce using rule 11 (dc_v)


State 43

   71 number: INT .

    $default  reduce using rule 71 (number)


State 44

   72 number: FLOAT .

    $default  reduce using rule 72 (number)


State 45

    9 dc_cc: CONST ID EQUAL number . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 46

   47 cmd: BEG1N commands . END

    END  shift, and go to state 69


State 47

   40 cmd: READ LBRACKET . variables RBRACKET

    error  shift, and go to state 36
    ID     shift, and go to state 37

    variables  go to state 70


State 48

   41 cmd: WRITE LBRACKET . variables RBRACKET

    error  shift, and go to state 36
    ID     shift, and go to state 37

    variables  go to state 71


State 49

   42 cmd: WHILE LBRACKET . condition RBRACKET DO cmd

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 58 (unary_op)

    condition   go to state 72
    expression  go to state 53
    unary_op    go to state 54
    term        go to state 55


State 50

   56 unary_op: PLUS .

    $default  reduce using rule 56 (unary_op)


State 51

   57 unary_op: MINUS .

    $default  reduce using rule 57 (unary_op)


State 52

   44 cmd: IF condition . THEN cmd false_p

    THEN  shift, and go to state 73


State 53

   48 condition: expression . comparator expression

    EQUAL     shift, and go to state 74
    NOTEQUAL  shift, and go to state 75
    GEQUAL    shift, and go to state 76
    LEQUAL    shift, and go to state 77
    GREATER   shift, and go to state 78
    LESSER    shift, and go to state 79

    comparator  go to state 80


State 54

   63 term: unary_op . factor more_factors

    INT       shift, and go to state 43
    FLOAT     shift, and go to state 44
    ID        shift, and go to state 81
    LBRACKET  shift, and go to state 82

    factor  go to state 83
    number  go to state 84


State 55

   55 expression: term . other_terms

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86

    $default  reduce using rule 60 (other_terms)

    other_terms  go to state 87
    add_op       go to state 88


State 56

   43 cmd: FOR ID . ATTRIB INT TO INT DO cmd

    ATTRIB  shift, and go to state 89


State 57

   31 arg_list: LBRACKET . arguments RBRACKET

    ID  shift, and go to state 90

    arguments  go to state 91


State 58

   45 cmd: ID ATTRIB . expression

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 58 (unary_op)

    expression  go to state 92
    unary_op    go to state 54
    term        go to state 55


State 59

   46 cmd: ID arg_list .

    $default  reduce using rule 46 (cmd)


State 60

    4 body: dc BEG1N commands END .

    $default  reduce using rule 4 (body)


State 61

   38 commands: cmd SEMICOLON . commands

    BEG1N  shift, and go to state 27
    READ   shift, and go to state 28
    WRITE  shift, and go to state 29
    WHILE  shift, and go to state 30
    IF     shift, and go to state 31
    FOR    shift, and go to state 32
    ID     shift, and go to state 33

    $default  reduce using rule 39 (commands)

    commands  go to state 93
    cmd       go to state 35


State 62

   19 more_var: COMMA . variables

    error  shift, and go to state 36
    ID     shift, and go to state 37

    variables  go to state 94


State 63

   17 variables: ID more_var .

    $default  reduce using rule 17 (variables)


State 64

   13 dc_vv: VAR variables COLON . var_type SEMICOLON

    error    shift, and go to state 95
    REAL     shift, and go to state 96
    INTEGER  shift, and go to state 97

    var_type  go to state 98


State 65

   23 dc_pp: PROCEDURE ID . parameters SEMICOLON body_p

    LBRACKET  shift, and go to state 99

    $default  reduce using rule 25 (parameters)

    parameters  go to state 100


State 66

    6 dc: dc_c dc_v dc_p error . BEG1N

    BEG1N  shift, and go to state 101


State 67

   21 dc_p: dc_pp dc_p .

    $default  reduce using rule 21 (dc_p)


State 68

    9 dc_cc: CONST ID EQUAL number SEMICOLON .

    $default  reduce using rule 9 (dc_cc)


State 69

   47 cmd: BEG1N commands END .

    $default  reduce using rule 47 (cmd)


State 70

   40 cmd: READ LBRACKET variables . RBRACKET

    RBRACKET  shift, and go to state 102


State 71

   41 cmd: WRITE LBRACKET variables . RBRACKET

    RBRACKET  shift, and go to state 103


State 72

   42 cmd: WHILE LBRACKET condition . RBRACKET DO cmd

    RBRACKET  shift, and go to state 104


State 73

   44 cmd: IF condition THEN . cmd false_p

    BEG1N  shift, and go to state 27
    READ   shift, and go to state 28
    WRITE  shift, and go to state 29
    WHILE  shift, and go to state 30
    IF     shift, and go to state 31
    FOR    shift, and go to state 32
    ID     shift, and go to state 33

    cmd  go to state 105


State 74

   51 comparator: EQUAL .

    $default  reduce using rule 51 (comparator)


State 75

   54 comparator: NOTEQUAL .

    $default  reduce using rule 54 (comparator)


State 76

   49 comparator: GEQUAL .

    $default  reduce using rule 49 (comparator)


State 77

   50 comparator: LEQUAL .

    $default  reduce using rule 50 (comparator)


State 78

   52 comparator: GREATER .

    $default  reduce using rule 52 (comparator)


State 79

   53 comparator: LESSER .

    $default  reduce using rule 53 (comparator)


State 80

   48 condition: expression comparator . expression

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 58 (unary_op)

    expression  go to state 106
    unary_op    go to state 54
    term        go to state 55


State 81

   68 factor: ID .

    $default  reduce using rule 68 (factor)


State 82

   70 factor: LBRACKET . expression RBRACKET

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 58 (unary_op)

    expression  go to state 107
    unary_op    go to state 54
    term        go to state 55


State 83

   63 term: unary_op factor . more_factors

    MULT  shift, and go to state 108
    DIV   shift, and go to state 109

    $default  reduce using rule 65 (more_factors)

    more_factors  go to state 110
    mult_op       go to state 111


State 84

   69 factor: number .

    $default  reduce using rule 69 (factor)


State 85

   61 add_op: PLUS .

    $default  reduce using rule 61 (add_op)


State 86

   62 add_op: MINUS .

    $default  reduce using rule 62 (add_op)


State 87

   55 expression: term other_terms .

    $default  reduce using rule 55 (expression)


State 88

   59 other_terms: add_op . term other_terms

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 58 (unary_op)

    unary_op  go to state 54
    term      go to state 112


State 89

   43 cmd: FOR ID ATTRIB . INT TO INT DO cmd

    INT  shift, and go to state 113


State 90

   33 arguments: ID . more_id

    SEMICOLON  shift, and go to state 114

    $default  reduce using rule 35 (more_id)

    more_id  go to state 115


State 91

   31 arg_list: LBRACKET arguments . RBRACKET

    RBRACKET  shift, and go to state 116


State 92

   45 cmd: ID ATTRIB expression .

    $default  reduce using rule 45 (cmd)


State 93

   38 commands: cmd SEMICOLON commands .

    $default  reduce using rule 38 (commands)


State 94

   19 more_var: COMMA variables .

    $default  reduce using rule 19 (more_var)


State 95

   16 var_type: error .

    $default  reduce using rule 16 (var_type)


State 96

   14 var_type: REAL .

    $default  reduce using rule 14 (var_type)


State 97

   15 var_type: INTEGER .

    $default  reduce using rule 15 (var_type)


State 98

   13 dc_vv: VAR variables COLON var_type . SEMICOLON

    SEMICOLON  shift, and go to state 117


State 99

   24 parameters: LBRACKET . param_list RBRACKET

    error  shift, and go to state 36
    ID     shift, and go to state 37

    variables   go to state 118
    param_list  go to state 119


State 100

   23 dc_pp: PROCEDURE ID parameters . SEMICOLON body_p

    SEMICOLON  shift, and go to state 120


State 101

    6 dc: dc_c dc_v dc_p error BEG1N .

    $default  reduce using rule 6 (dc)


State 102

   40 cmd: READ LBRACKET variables RBRACKET .

    $default  reduce using rule 40 (cmd)


State 103

   41 cmd: WRITE LBRACKET variables RBRACKET .

    $default  reduce using rule 41 (cmd)


State 104

   42 cmd: WHILE LBRACKET condition RBRACKET . DO cmd

    DO  shift, and go to state 121


State 105

   44 cmd: IF condition THEN cmd . false_p

    ELSE  shift, and go to state 122

    ELSE      [reduce using rule 37 (false_p)]
    $default  reduce using rule 37 (false_p)

    false_p  go to state 123


State 106

   48 condition: expression comparator expression .

    $default  reduce using rule 48 (condition)


State 107

   70 factor: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 124


State 108

   66 mult_op: MULT .

    $default  reduce using rule 66 (mult_op)


State 109

   67 mult_op: DIV .

    $default  reduce using rule 67 (mult_op)


State 110

   63 term: unary_op factor more_factors .

    $default  reduce using rule 63 (term)


State 111

   64 more_factors: mult_op . factor more_factors

    INT       shift, and go to state 43
    FLOAT     shift, and go to state 44
    ID        shift, and go to state 81
    LBRACKET  shift, and go to state 82

    factor  go to state 125
    number  go to state 84


State 112

   59 other_terms: add_op term . other_terms

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86

    $default  reduce using rule 60 (other_terms)

    other_terms  go to state 126
    add_op       go to state 88


State 113

   43 cmd: FOR ID ATTRIB INT . TO INT DO cmd

    TO  shift, and go to state 127


State 114

   34 more_id: SEMICOLON . arguments

    ID  shift, and go to state 90

    arguments  go to state 128


State 115

   33 arguments: ID more_id .

    $default  reduce using rule 33 (arguments)


State 116

   31 arg_list: LBRACKET arguments RBRACKET .

    $default  reduce using rule 31 (arg_list)


State 117

   13 dc_vv: VAR variables COLON var_type SEMICOLON .

    $default  reduce using rule 13 (dc_vv)


State 118

   26 param_list: variables . COLON var_type more_param

    COLON  shift, and go to state 129


State 119

   24 parameters: LBRACKET param_list . RBRACKET

    RBRACKET  shift, and go to state 130


State 120

   23 dc_pp: PROCEDURE ID parameters SEMICOLON . body_p

    VAR  shift, and go to state 20

    $default  reduce using rule 12 (dc_v)

    dc_v    go to state 131
    dc_vv   go to state 22
    body_p  go to state 132
    dc_loc  go to state 133


State 121

   42 cmd: WHILE LBRACKET condition RBRACKET DO . cmd

    BEG1N  shift, and go to state 27
    READ   shift, and go to state 28
    WRITE  shift, and go to state 29
    WHILE  shift, and go to state 30
    IF     shift, and go to state 31
    FOR    shift, and go to state 32
    ID     shift, and go to state 33

    cmd  go to state 134


State 122

   36 false_p: ELSE . cmd

    BEG1N  shift, and go to state 27
    READ   shift, and go to state 28
    WRITE  shift, and go to state 29
    WHILE  shift, and go to state 30
    IF     shift, and go to state 31
    FOR    shift, and go to state 32
    ID     shift, and go to state 33

    cmd  go to state 135


State 123

   44 cmd: IF condition THEN cmd false_p .

    $default  reduce using rule 44 (cmd)


State 124

   70 factor: LBRACKET expression RBRACKET .

    $default  reduce using rule 70 (factor)


State 125

   64 more_factors: mult_op factor . more_factors

    MULT  shift, and go to state 108
    DIV   shift, and go to state 109

    $default  reduce using rule 65 (more_factors)

    more_factors  go to state 136
    mult_op       go to state 111


State 126

   59 other_terms: add_op term other_terms .

    $default  reduce using rule 59 (other_terms)


State 127

   43 cmd: FOR ID ATTRIB INT TO . INT DO cmd

    INT  shift, and go to state 137


State 128

   34 more_id: SEMICOLON arguments .

    $default  reduce using rule 34 (more_id)


State 129

   26 param_list: variables COLON . var_type more_param

    error    shift, and go to state 95
    REAL     shift, and go to state 96
    INTEGER  shift, and go to state 97

    var_type  go to state 138


State 130

   24 parameters: LBRACKET param_list RBRACKET .

    $default  reduce using rule 24 (parameters)


State 131

   30 dc_loc: dc_v .

    $default  reduce using rule 30 (dc_loc)


State 132

   23 dc_pp: PROCEDURE ID parameters SEMICOLON body_p .

    $default  reduce using rule 23 (dc_pp)


State 133

   29 body_p: dc_loc . BEG1N commands END SEMICOLON

    BEG1N  shift, and go to state 139


State 134

   42 cmd: WHILE LBRACKET condition RBRACKET DO cmd .

    $default  reduce using rule 42 (cmd)


State 135

   36 false_p: ELSE cmd .

    $default  reduce using rule 36 (false_p)


State 136

   64 more_factors: mult_op factor more_factors .

    $default  reduce using rule 64 (more_factors)


State 137

   43 cmd: FOR ID ATTRIB INT TO INT . DO cmd

    DO  shift, and go to state 140


State 138

   26 param_list: variables COLON var_type . more_param

    SEMICOLON  shift, and go to state 141

    $default  reduce using rule 28 (more_param)

    more_param  go to state 142


State 139

   29 body_p: dc_loc BEG1N . commands END SEMICOLON

    BEG1N  shift, and go to state 27
    READ   shift, and go to state 28
    WRITE  shift, and go to state 29
    WHILE  shift, and go to state 30
    IF     shift, and go to state 31
    FOR    shift, and go to state 32
    ID     shift, and go to state 33

    $default  reduce using rule 39 (commands)

    commands  go to state 143
    cmd       go to state 35


State 140

   43 cmd: FOR ID ATTRIB INT TO INT DO . cmd

    BEG1N  shift, and go to state 27
    READ   shift, and go to state 28
    WRITE  shift, and go to state 29
    WHILE  shift, and go to state 30
    IF     shift, and go to state 31
    FOR    shift, and go to state 32
    ID     shift, and go to state 33

    cmd  go to state 144


State 141

   27 more_param: SEMICOLON . param_list

    error  shift, and go to state 36
    ID     shift, and go to state 37

    variables   go to state 118
    param_list  go to state 145


State 142

   26 param_list: variables COLON var_type more_param .

    $default  reduce using rule 26 (param_list)


State 143

   29 body_p: dc_loc BEG1N commands . END SEMICOLON

    END  shift, and go to state 146


State 144

   43 cmd: FOR ID ATTRIB INT TO INT DO cmd .

    $default  reduce using rule 43 (cmd)


State 145

   27 more_param: SEMICOLON param_list .

    $default  reduce using rule 27 (more_param)


State 146

   29 body_p: dc_loc BEG1N commands END . SEMICOLON

    SEMICOLON  shift, and go to state 147


State 147

   29 body_p: dc_loc BEG1N commands END SEMICOLON .

    $default  reduce using rule 29 (body_p)
