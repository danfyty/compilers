Terminals unused in grammar

   EOF_TOKEN
   PERIOD


State 76 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID SEMICOLON body
    2        | error PROGRAM ID SEMICOLON body
    3        | error SEMICOLON body

    4 body: dc BEG1N commands END

    5 dc: dc_c dc_v dc_p

    6 dc_c: dc_cc dc_c
    7     | %empty

    8 dc_cc: CONST ID EQUAL number SEMICOLON
    9      | error SEMICOLON

   10 dc_v: dc_vv dc_v
   11     | %empty

   12 dc_vv: VAR variables COLON var_type SEMICOLON
   13      | VAR error SEMICOLON

   14 var_type: REAL
   15         | INTEGER

   16 variables: ID more_var

   17 more_var: COMMA variables
   18         | %empty

   19 dc_p: dc_pp dc_p
   20     | %empty

   21 dc_pp: PROCEDURE ID parameters SEMICOLON body_p
   22      | PROCEDURE error SEMICOLON body_p

   23 parameters: LBRACKET param_list RBRACKET
   24           | %empty

   25 param_list: variables COLON var_type more_param
   26           | %empty

   27 more_param: SEMICOLON param_list
   28           | %empty

   29 body_p: dc_loc BEG1N commands END SEMICOLON

   30 dc_loc: dc_v

   31 false_p: ELSE cmd
   32        | %empty

   33 arg_list: LBRACKET arguments RBRACKET
   34         | %empty

   35 arguments: ID more_id

   36 more_id: SEMICOLON arguments
   37        | %empty

   38 commands: cmd SEMICOLON commands
   39         | %empty
   40         | error SEMICOLON commands

   41 cmd: READ LBRACKET variables RBRACKET
   42    | WRITE LBRACKET variables RBRACKET
   43    | WHILE LBRACKET condition RBRACKET DO cmd
   44    | WHILE error DO cmd
   45    | FOR ID ATTRIB INT TO INT DO cmd
   46    | FOR error DO cmd
   47    | IF condition THEN cmd false_p
   48    | ID ATTRIB expression
   49    | ID arg_list
   50    | BEG1N commands END
   51    | error THEN cmd false_p

   52 condition: expression comparator expression

   53 comparator: GEQUAL
   54           | LEQUAL
   55           | EQUAL
   56           | GREATER
   57           | LESSER
   58           | NOTEQUAL

   59 expression: term other_terms

   60 unary_op: PLUS
   61         | MINUS
   62         | %empty

   63 other_terms: add_op term other_terms
   64            | %empty

   65 add_op: PLUS
   66       | MINUS

   67 term: unary_op factor more_factors

   68 more_factors: mult_op factor more_factors
   69             | %empty

   70 mult_op: MULT
   71        | DIV

   72 factor: ID
   73       | number
   74       | LBRACKET expression RBRACKET
   75       | LBRACKET error RBRACKET

   76 number: INT
   77       | FLOAT


Terminals, with rules where they appear

$end (0) 0
error (256) 2 3 9 13 22 40 44 46 51 75
EOF_TOKEN (258)
PROGRAM (259) 1 2
BEG1N (260) 4 29 50
END (261) 4 29 50
CONST (262) 8
VAR (263) 12 13
REAL (264) 14
INTEGER (265) 15
PROCEDURE (266) 21 22
ELSE (267) 31
READ (268) 41
WRITE (269) 42
WHILE (270) 43 44
DO (271) 43 44 45 46
IF (272) 47
FOR (273) 45 46
TO (274) 45
THEN (275) 47 51
INT (276) 45 76
FLOAT (277) 77
ID (278) 1 2 8 16 21 35 45 48 49 72
SEMICOLON (279) 1 2 3 8 9 12 13 21 22 27 29 36 38 40
PERIOD (280)
EQUAL (281) 8 55
COLON (282) 12 25
COMMA (283) 17
LBRACKET (284) 23 33 41 42 43 74 75
RBRACKET (285) 23 33 41 42 43 74 75
ATTRIB (286) 45 48
NOTEQUAL (287) 58
GEQUAL (288) 53
LEQUAL (289) 54
GREATER (290) 56
LESSER (291) 57
PLUS (292) 60 65
MINUS (293) 61 66
MULT (294) 70
DIV (295) 71


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1 2 3, on right: 0
body (43)
    on left: 4, on right: 1 2 3
dc (44)
    on left: 5, on right: 4
dc_c (45)
    on left: 6 7, on right: 5 6
dc_cc (46)
    on left: 8 9, on right: 6
dc_v (47)
    on left: 10 11, on right: 5 10 30
dc_vv (48)
    on left: 12 13, on right: 10
var_type (49)
    on left: 14 15, on right: 12 25
variables (50)
    on left: 16, on right: 12 17 25 41 42
more_var (51)
    on left: 17 18, on right: 16
dc_p (52)
    on left: 19 20, on right: 5 19
dc_pp (53)
    on left: 21 22, on right: 19
parameters (54)
    on left: 23 24, on right: 21
param_list (55)
    on left: 25 26, on right: 23 27
more_param (56)
    on left: 27 28, on right: 25
body_p (57)
    on left: 29, on right: 21 22
dc_loc (58)
    on left: 30, on right: 29
false_p (59)
    on left: 31 32, on right: 47 51
arg_list (60)
    on left: 33 34, on right: 49
arguments (61)
    on left: 35, on right: 33 36
more_id (62)
    on left: 36 37, on right: 35
commands (63)
    on left: 38 39 40, on right: 4 29 38 40 50
cmd (64)
    on left: 41 42 43 44 45 46 47 48 49 50 51, on right: 31 38 43 44
    45 46 47 51
condition (65)
    on left: 52, on right: 43 47
comparator (66)
    on left: 53 54 55 56 57 58, on right: 52
expression (67)
    on left: 59, on right: 48 52 74
unary_op (68)
    on left: 60 61 62, on right: 67
other_terms (69)
    on left: 63 64, on right: 59 63
add_op (70)
    on left: 65 66, on right: 63
term (71)
    on left: 67, on right: 59 63
more_factors (72)
    on left: 68 69, on right: 67 68
mult_op (73)
    on left: 70 71, on right: 68
factor (74)
    on left: 72 73 74 75, on right: 67 68
number (75)
    on left: 76 77, on right: 8 73


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    PROGRAM  shift, and go to state 2

    program  go to state 3


State 1

    2 program: error . PROGRAM ID SEMICOLON body
    3        | error . SEMICOLON body

    PROGRAM    shift, and go to state 4
    SEMICOLON  shift, and go to state 5


State 2

    1 program: PROGRAM . ID SEMICOLON body

    ID  shift, and go to state 6


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    2 program: error PROGRAM . ID SEMICOLON body

    ID  shift, and go to state 8


State 5

    3 program: error SEMICOLON . body

    error  shift, and go to state 9
    CONST  shift, and go to state 10

    BEG1N      reduce using rule 7 (dc_c)
    VAR        reduce using rule 7 (dc_c)
    PROCEDURE  reduce using rule 7 (dc_c)

    body   go to state 11
    dc     go to state 12
    dc_c   go to state 13
    dc_cc  go to state 14


State 6

    1 program: PROGRAM ID . SEMICOLON body

    SEMICOLON  shift, and go to state 15


State 7

    0 $accept: program $end .

    $default  accept


State 8

    2 program: error PROGRAM ID . SEMICOLON body

    SEMICOLON  shift, and go to state 16


State 9

    9 dc_cc: error . SEMICOLON

    SEMICOLON  shift, and go to state 17


State 10

    8 dc_cc: CONST . ID EQUAL number SEMICOLON

    ID  shift, and go to state 18


State 11

    3 program: error SEMICOLON body .

    $default  reduce using rule 3 (program)


State 12

    4 body: dc . BEG1N commands END

    BEG1N  shift, and go to state 19


State 13

    5 dc: dc_c . dc_v dc_p

    VAR  shift, and go to state 20

    $default  reduce using rule 11 (dc_v)

    dc_v   go to state 21
    dc_vv  go to state 22


State 14

    6 dc_c: dc_cc . dc_c

    error  shift, and go to state 9
    CONST  shift, and go to state 10

    BEG1N      reduce using rule 7 (dc_c)
    VAR        reduce using rule 7 (dc_c)
    PROCEDURE  reduce using rule 7 (dc_c)

    dc_c   go to state 23
    dc_cc  go to state 14


State 15

    1 program: PROGRAM ID SEMICOLON . body

    error  shift, and go to state 9
    CONST  shift, and go to state 10

    BEG1N      reduce using rule 7 (dc_c)
    VAR        reduce using rule 7 (dc_c)
    PROCEDURE  reduce using rule 7 (dc_c)

    body   go to state 24
    dc     go to state 12
    dc_c   go to state 13
    dc_cc  go to state 14


State 16

    2 program: error PROGRAM ID SEMICOLON . body

    error  shift, and go to state 9
    CONST  shift, and go to state 10

    BEG1N      reduce using rule 7 (dc_c)
    VAR        reduce using rule 7 (dc_c)
    PROCEDURE  reduce using rule 7 (dc_c)

    body   go to state 25
    dc     go to state 12
    dc_c   go to state 13
    dc_cc  go to state 14


State 17

    9 dc_cc: error SEMICOLON .

    $default  reduce using rule 9 (dc_cc)


State 18

    8 dc_cc: CONST ID . EQUAL number SEMICOLON

    EQUAL  shift, and go to state 26


State 19

    4 body: dc BEG1N . commands END

    error  shift, and go to state 27
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    END  reduce using rule 39 (commands)

    commands  go to state 35
    cmd       go to state 36


State 20

   12 dc_vv: VAR . variables COLON var_type SEMICOLON
   13      | VAR . error SEMICOLON

    error  shift, and go to state 37
    ID     shift, and go to state 38

    variables  go to state 39


State 21

    5 dc: dc_c dc_v . dc_p

    PROCEDURE  shift, and go to state 40

    $default  reduce using rule 20 (dc_p)

    dc_p   go to state 41
    dc_pp  go to state 42


State 22

   10 dc_v: dc_vv . dc_v

    VAR  shift, and go to state 20

    $default  reduce using rule 11 (dc_v)

    dc_v   go to state 43
    dc_vv  go to state 22


State 23

    6 dc_c: dc_cc dc_c .

    $default  reduce using rule 6 (dc_c)


State 24

    1 program: PROGRAM ID SEMICOLON body .

    $default  reduce using rule 1 (program)


State 25

    2 program: error PROGRAM ID SEMICOLON body .

    $default  reduce using rule 2 (program)


State 26

    8 dc_cc: CONST ID EQUAL . number SEMICOLON

    INT    shift, and go to state 44
    FLOAT  shift, and go to state 45

    number  go to state 46


State 27

   40 commands: error . SEMICOLON commands
   51 cmd: error . THEN cmd false_p

    THEN       shift, and go to state 47
    SEMICOLON  shift, and go to state 48


State 28

   50 cmd: BEG1N . commands END

    error  shift, and go to state 27
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    END  reduce using rule 39 (commands)

    commands  go to state 49
    cmd       go to state 36


State 29

   41 cmd: READ . LBRACKET variables RBRACKET

    LBRACKET  shift, and go to state 50


State 30

   42 cmd: WRITE . LBRACKET variables RBRACKET

    LBRACKET  shift, and go to state 51


State 31

   43 cmd: WHILE . LBRACKET condition RBRACKET DO cmd
   44    | WHILE . error DO cmd

    error     shift, and go to state 52
    LBRACKET  shift, and go to state 53


State 32

   47 cmd: IF . condition THEN cmd false_p

    PLUS   shift, and go to state 54
    MINUS  shift, and go to state 55

    $default  reduce using rule 62 (unary_op)

    condition   go to state 56
    expression  go to state 57
    unary_op    go to state 58
    term        go to state 59


State 33

   45 cmd: FOR . ID ATTRIB INT TO INT DO cmd
   46    | FOR . error DO cmd

    error  shift, and go to state 60
    ID     shift, and go to state 61


State 34

   48 cmd: ID . ATTRIB expression
   49    | ID . arg_list

    LBRACKET  shift, and go to state 62
    ATTRIB    shift, and go to state 63

    $default  reduce using rule 34 (arg_list)

    arg_list  go to state 64


State 35

    4 body: dc BEG1N commands . END

    END  shift, and go to state 65


State 36

   38 commands: cmd . SEMICOLON commands

    SEMICOLON  shift, and go to state 66


State 37

   13 dc_vv: VAR error . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 38

   16 variables: ID . more_var

    COMMA  shift, and go to state 68

    $default  reduce using rule 18 (more_var)

    more_var  go to state 69


State 39

   12 dc_vv: VAR variables . COLON var_type SEMICOLON

    COLON  shift, and go to state 70


State 40

   21 dc_pp: PROCEDURE . ID parameters SEMICOLON body_p
   22      | PROCEDURE . error SEMICOLON body_p

    error  shift, and go to state 71
    ID     shift, and go to state 72


State 41

    5 dc: dc_c dc_v dc_p .

    $default  reduce using rule 5 (dc)


State 42

   19 dc_p: dc_pp . dc_p

    PROCEDURE  shift, and go to state 40

    $default  reduce using rule 20 (dc_p)

    dc_p   go to state 73
    dc_pp  go to state 42


State 43

   10 dc_v: dc_vv dc_v .

    $default  reduce using rule 10 (dc_v)


State 44

   76 number: INT .

    $default  reduce using rule 76 (number)


State 45

   77 number: FLOAT .

    $default  reduce using rule 77 (number)


State 46

    8 dc_cc: CONST ID EQUAL number . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 47

   51 cmd: error THEN . cmd false_p

    error  shift, and go to state 75
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    cmd  go to state 76


State 48

   40 commands: error SEMICOLON . commands

    error  shift, and go to state 27
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    END  reduce using rule 39 (commands)

    commands  go to state 77
    cmd       go to state 36


State 49

   50 cmd: BEG1N commands . END

    END  shift, and go to state 78


State 50

   41 cmd: READ LBRACKET . variables RBRACKET

    ID  shift, and go to state 38

    variables  go to state 79


State 51

   42 cmd: WRITE LBRACKET . variables RBRACKET

    ID  shift, and go to state 38

    variables  go to state 80


State 52

   44 cmd: WHILE error . DO cmd

    DO  shift, and go to state 81


State 53

   43 cmd: WHILE LBRACKET . condition RBRACKET DO cmd

    PLUS   shift, and go to state 54
    MINUS  shift, and go to state 55

    $default  reduce using rule 62 (unary_op)

    condition   go to state 82
    expression  go to state 57
    unary_op    go to state 58
    term        go to state 59


State 54

   60 unary_op: PLUS .

    $default  reduce using rule 60 (unary_op)


State 55

   61 unary_op: MINUS .

    $default  reduce using rule 61 (unary_op)


State 56

   47 cmd: IF condition . THEN cmd false_p

    THEN  shift, and go to state 83


State 57

   52 condition: expression . comparator expression

    EQUAL     shift, and go to state 84
    NOTEQUAL  shift, and go to state 85
    GEQUAL    shift, and go to state 86
    LEQUAL    shift, and go to state 87
    GREATER   shift, and go to state 88
    LESSER    shift, and go to state 89

    comparator  go to state 90


State 58

   67 term: unary_op . factor more_factors

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    ID        shift, and go to state 91
    LBRACKET  shift, and go to state 92

    factor  go to state 93
    number  go to state 94


State 59

   59 expression: term . other_terms

    PLUS   shift, and go to state 95
    MINUS  shift, and go to state 96

    $default  reduce using rule 64 (other_terms)

    other_terms  go to state 97
    add_op       go to state 98


State 60

   46 cmd: FOR error . DO cmd

    DO  shift, and go to state 99


State 61

   45 cmd: FOR ID . ATTRIB INT TO INT DO cmd

    ATTRIB  shift, and go to state 100


State 62

   33 arg_list: LBRACKET . arguments RBRACKET

    ID  shift, and go to state 101

    arguments  go to state 102


State 63

   48 cmd: ID ATTRIB . expression

    PLUS   shift, and go to state 54
    MINUS  shift, and go to state 55

    $default  reduce using rule 62 (unary_op)

    expression  go to state 103
    unary_op    go to state 58
    term        go to state 59


State 64

   49 cmd: ID arg_list .

    $default  reduce using rule 49 (cmd)


State 65

    4 body: dc BEG1N commands END .

    $default  reduce using rule 4 (body)


State 66

   38 commands: cmd SEMICOLON . commands

    error  shift, and go to state 27
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    END  reduce using rule 39 (commands)

    commands  go to state 104
    cmd       go to state 36


State 67

   13 dc_vv: VAR error SEMICOLON .

    $default  reduce using rule 13 (dc_vv)


State 68

   17 more_var: COMMA . variables

    ID  shift, and go to state 38

    variables  go to state 105


State 69

   16 variables: ID more_var .

    $default  reduce using rule 16 (variables)


State 70

   12 dc_vv: VAR variables COLON . var_type SEMICOLON

    REAL     shift, and go to state 106
    INTEGER  shift, and go to state 107

    var_type  go to state 108


State 71

   22 dc_pp: PROCEDURE error . SEMICOLON body_p

    SEMICOLON  shift, and go to state 109


State 72

   21 dc_pp: PROCEDURE ID . parameters SEMICOLON body_p

    LBRACKET  shift, and go to state 110

    $default  reduce using rule 24 (parameters)

    parameters  go to state 111


State 73

   19 dc_p: dc_pp dc_p .

    $default  reduce using rule 19 (dc_p)


State 74

    8 dc_cc: CONST ID EQUAL number SEMICOLON .

    $default  reduce using rule 8 (dc_cc)


State 75

   51 cmd: error . THEN cmd false_p

    THEN  shift, and go to state 47


State 76

   51 cmd: error THEN cmd . false_p

    ELSE  shift, and go to state 112

    ELSE      [reduce using rule 32 (false_p)]
    $default  reduce using rule 32 (false_p)

    false_p  go to state 113


State 77

   40 commands: error SEMICOLON commands .

    $default  reduce using rule 40 (commands)


State 78

   50 cmd: BEG1N commands END .

    $default  reduce using rule 50 (cmd)


State 79

   41 cmd: READ LBRACKET variables . RBRACKET

    RBRACKET  shift, and go to state 114


State 80

   42 cmd: WRITE LBRACKET variables . RBRACKET

    RBRACKET  shift, and go to state 115


State 81

   44 cmd: WHILE error DO . cmd

    error  shift, and go to state 75
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    cmd  go to state 116


State 82

   43 cmd: WHILE LBRACKET condition . RBRACKET DO cmd

    RBRACKET  shift, and go to state 117


State 83

   47 cmd: IF condition THEN . cmd false_p

    error  shift, and go to state 75
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    cmd  go to state 118


State 84

   55 comparator: EQUAL .

    $default  reduce using rule 55 (comparator)


State 85

   58 comparator: NOTEQUAL .

    $default  reduce using rule 58 (comparator)


State 86

   53 comparator: GEQUAL .

    $default  reduce using rule 53 (comparator)


State 87

   54 comparator: LEQUAL .

    $default  reduce using rule 54 (comparator)


State 88

   56 comparator: GREATER .

    $default  reduce using rule 56 (comparator)


State 89

   57 comparator: LESSER .

    $default  reduce using rule 57 (comparator)


State 90

   52 condition: expression comparator . expression

    PLUS   shift, and go to state 54
    MINUS  shift, and go to state 55

    $default  reduce using rule 62 (unary_op)

    expression  go to state 119
    unary_op    go to state 58
    term        go to state 59


State 91

   72 factor: ID .

    $default  reduce using rule 72 (factor)


State 92

   74 factor: LBRACKET . expression RBRACKET
   75       | LBRACKET . error RBRACKET

    error  shift, and go to state 120
    PLUS   shift, and go to state 54
    MINUS  shift, and go to state 55

    INT       reduce using rule 62 (unary_op)
    FLOAT     reduce using rule 62 (unary_op)
    ID        reduce using rule 62 (unary_op)
    LBRACKET  reduce using rule 62 (unary_op)

    expression  go to state 121
    unary_op    go to state 58
    term        go to state 59


State 93

   67 term: unary_op factor . more_factors

    MULT  shift, and go to state 122
    DIV   shift, and go to state 123

    $default  reduce using rule 69 (more_factors)

    more_factors  go to state 124
    mult_op       go to state 125


State 94

   73 factor: number .

    $default  reduce using rule 73 (factor)


State 95

   65 add_op: PLUS .

    $default  reduce using rule 65 (add_op)


State 96

   66 add_op: MINUS .

    $default  reduce using rule 66 (add_op)


State 97

   59 expression: term other_terms .

    $default  reduce using rule 59 (expression)


State 98

   63 other_terms: add_op . term other_terms

    PLUS   shift, and go to state 54
    MINUS  shift, and go to state 55

    $default  reduce using rule 62 (unary_op)

    unary_op  go to state 58
    term      go to state 126


State 99

   46 cmd: FOR error DO . cmd

    error  shift, and go to state 75
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    cmd  go to state 127


State 100

   45 cmd: FOR ID ATTRIB . INT TO INT DO cmd

    INT  shift, and go to state 128


State 101

   35 arguments: ID . more_id

    SEMICOLON  shift, and go to state 129

    $default  reduce using rule 37 (more_id)

    more_id  go to state 130


State 102

   33 arg_list: LBRACKET arguments . RBRACKET

    RBRACKET  shift, and go to state 131


State 103

   48 cmd: ID ATTRIB expression .

    $default  reduce using rule 48 (cmd)


State 104

   38 commands: cmd SEMICOLON commands .

    $default  reduce using rule 38 (commands)


State 105

   17 more_var: COMMA variables .

    $default  reduce using rule 17 (more_var)


State 106

   14 var_type: REAL .

    $default  reduce using rule 14 (var_type)


State 107

   15 var_type: INTEGER .

    $default  reduce using rule 15 (var_type)


State 108

   12 dc_vv: VAR variables COLON var_type . SEMICOLON

    SEMICOLON  shift, and go to state 132


State 109

   22 dc_pp: PROCEDURE error SEMICOLON . body_p

    VAR  shift, and go to state 20

    $default  reduce using rule 11 (dc_v)

    dc_v    go to state 133
    dc_vv   go to state 22
    body_p  go to state 134
    dc_loc  go to state 135


State 110

   23 parameters: LBRACKET . param_list RBRACKET

    ID  shift, and go to state 38

    $default  reduce using rule 26 (param_list)

    variables   go to state 136
    param_list  go to state 137


State 111

   21 dc_pp: PROCEDURE ID parameters . SEMICOLON body_p

    SEMICOLON  shift, and go to state 138


State 112

   31 false_p: ELSE . cmd

    error  shift, and go to state 75
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    cmd  go to state 139


State 113

   51 cmd: error THEN cmd false_p .

    $default  reduce using rule 51 (cmd)


State 114

   41 cmd: READ LBRACKET variables RBRACKET .

    $default  reduce using rule 41 (cmd)


State 115

   42 cmd: WRITE LBRACKET variables RBRACKET .

    $default  reduce using rule 42 (cmd)


State 116

   44 cmd: WHILE error DO cmd .

    $default  reduce using rule 44 (cmd)


State 117

   43 cmd: WHILE LBRACKET condition RBRACKET . DO cmd

    DO  shift, and go to state 140


State 118

   47 cmd: IF condition THEN cmd . false_p

    ELSE  shift, and go to state 112

    ELSE      [reduce using rule 32 (false_p)]
    $default  reduce using rule 32 (false_p)

    false_p  go to state 141


State 119

   52 condition: expression comparator expression .

    $default  reduce using rule 52 (condition)


State 120

   75 factor: LBRACKET error . RBRACKET

    RBRACKET  shift, and go to state 142


State 121

   74 factor: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 143


State 122

   70 mult_op: MULT .

    $default  reduce using rule 70 (mult_op)


State 123

   71 mult_op: DIV .

    $default  reduce using rule 71 (mult_op)


State 124

   67 term: unary_op factor more_factors .

    $default  reduce using rule 67 (term)


State 125

   68 more_factors: mult_op . factor more_factors

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    ID        shift, and go to state 91
    LBRACKET  shift, and go to state 92

    factor  go to state 144
    number  go to state 94


State 126

   63 other_terms: add_op term . other_terms

    PLUS   shift, and go to state 95
    MINUS  shift, and go to state 96

    $default  reduce using rule 64 (other_terms)

    other_terms  go to state 145
    add_op       go to state 98


State 127

   46 cmd: FOR error DO cmd .

    $default  reduce using rule 46 (cmd)


State 128

   45 cmd: FOR ID ATTRIB INT . TO INT DO cmd

    TO  shift, and go to state 146


State 129

   36 more_id: SEMICOLON . arguments

    ID  shift, and go to state 101

    arguments  go to state 147


State 130

   35 arguments: ID more_id .

    $default  reduce using rule 35 (arguments)


State 131

   33 arg_list: LBRACKET arguments RBRACKET .

    $default  reduce using rule 33 (arg_list)


State 132

   12 dc_vv: VAR variables COLON var_type SEMICOLON .

    $default  reduce using rule 12 (dc_vv)


State 133

   30 dc_loc: dc_v .

    $default  reduce using rule 30 (dc_loc)


State 134

   22 dc_pp: PROCEDURE error SEMICOLON body_p .

    $default  reduce using rule 22 (dc_pp)


State 135

   29 body_p: dc_loc . BEG1N commands END SEMICOLON

    BEG1N  shift, and go to state 148


State 136

   25 param_list: variables . COLON var_type more_param

    COLON  shift, and go to state 149


State 137

   23 parameters: LBRACKET param_list . RBRACKET

    RBRACKET  shift, and go to state 150


State 138

   21 dc_pp: PROCEDURE ID parameters SEMICOLON . body_p

    VAR  shift, and go to state 20

    $default  reduce using rule 11 (dc_v)

    dc_v    go to state 133
    dc_vv   go to state 22
    body_p  go to state 151
    dc_loc  go to state 135


State 139

   31 false_p: ELSE cmd .

    $default  reduce using rule 31 (false_p)


State 140

   43 cmd: WHILE LBRACKET condition RBRACKET DO . cmd

    error  shift, and go to state 75
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    cmd  go to state 152


State 141

   47 cmd: IF condition THEN cmd false_p .

    $default  reduce using rule 47 (cmd)


State 142

   75 factor: LBRACKET error RBRACKET .

    $default  reduce using rule 75 (factor)


State 143

   74 factor: LBRACKET expression RBRACKET .

    $default  reduce using rule 74 (factor)


State 144

   68 more_factors: mult_op factor . more_factors

    MULT  shift, and go to state 122
    DIV   shift, and go to state 123

    $default  reduce using rule 69 (more_factors)

    more_factors  go to state 153
    mult_op       go to state 125


State 145

   63 other_terms: add_op term other_terms .

    $default  reduce using rule 63 (other_terms)


State 146

   45 cmd: FOR ID ATTRIB INT TO . INT DO cmd

    INT  shift, and go to state 154


State 147

   36 more_id: SEMICOLON arguments .

    $default  reduce using rule 36 (more_id)


State 148

   29 body_p: dc_loc BEG1N . commands END SEMICOLON

    error  shift, and go to state 27
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    END  reduce using rule 39 (commands)

    commands  go to state 155
    cmd       go to state 36


State 149

   25 param_list: variables COLON . var_type more_param

    REAL     shift, and go to state 106
    INTEGER  shift, and go to state 107

    var_type  go to state 156


State 150

   23 parameters: LBRACKET param_list RBRACKET .

    $default  reduce using rule 23 (parameters)


State 151

   21 dc_pp: PROCEDURE ID parameters SEMICOLON body_p .

    $default  reduce using rule 21 (dc_pp)


State 152

   43 cmd: WHILE LBRACKET condition RBRACKET DO cmd .

    $default  reduce using rule 43 (cmd)


State 153

   68 more_factors: mult_op factor more_factors .

    $default  reduce using rule 68 (more_factors)


State 154

   45 cmd: FOR ID ATTRIB INT TO INT . DO cmd

    DO  shift, and go to state 157


State 155

   29 body_p: dc_loc BEG1N commands . END SEMICOLON

    END  shift, and go to state 158


State 156

   25 param_list: variables COLON var_type . more_param

    SEMICOLON  shift, and go to state 159

    $default  reduce using rule 28 (more_param)

    more_param  go to state 160


State 157

   45 cmd: FOR ID ATTRIB INT TO INT DO . cmd

    error  shift, and go to state 75
    BEG1N  shift, and go to state 28
    READ   shift, and go to state 29
    WRITE  shift, and go to state 30
    WHILE  shift, and go to state 31
    IF     shift, and go to state 32
    FOR    shift, and go to state 33
    ID     shift, and go to state 34

    cmd  go to state 161


State 158

   29 body_p: dc_loc BEG1N commands END . SEMICOLON

    SEMICOLON  shift, and go to state 162


State 159

   27 more_param: SEMICOLON . param_list

    ID  shift, and go to state 38

    $default  reduce using rule 26 (param_list)

    variables   go to state 136
    param_list  go to state 163


State 160

   25 param_list: variables COLON var_type more_param .

    $default  reduce using rule 25 (param_list)


State 161

   45 cmd: FOR ID ATTRIB INT TO INT DO cmd .

    $default  reduce using rule 45 (cmd)


State 162

   29 body_p: dc_loc BEG1N commands END SEMICOLON .

    $default  reduce using rule 29 (body_p)


State 163

   27 more_param: SEMICOLON param_list .

    $default  reduce using rule 27 (more_param)
